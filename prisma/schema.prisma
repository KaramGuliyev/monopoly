// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("NEXT_DATABASE_URL")
}

model User {
  id        String   @id @default(uuid())
  name      String
  email     String   @unique
  password  String
  games     Game[]   @relation("GamePlayers")
  createdGames Game[] @relation("GameCreator")
  transactionsFrom Transaction[] @relation("TransactionFrom")
  transactionsTo   Transaction[] @relation("TransactionTo")
}

model Game {
  id        String   @id @default(uuid())
  code      String   @unique
  creator   User     @relation("GameCreator", fields: [creatorId], references: [id])
  creatorId String
  players   User[]   @relation("GamePlayers")
  transactions Transaction[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Transaction {
  id        String   @id @default(uuid())
  amount    Int
  from      User     @relation("TransactionFrom", fields: [fromId], references: [id])
  fromId    String
  to        User     @relation("TransactionTo", fields: [toId], references: [id])
  toId      String
  game      Game     @relation(fields: [gameId], references: [id])
  gameId    String
  status    TransactionStatus
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum TransactionStatus {
  PENDING
  APPROVED
  REJECTED
}
